Problem link:-https://practice.geeksforgeeks.org/problems/find-the-closest-element-in-bst/1
Leetcode;-https://leetcode.com/problems/check-if-it-is-a-straight-line/
Geekscode:-

/*
Tree Node
struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/

class Solution
{
    public:
    //Function to find the least absolute difference between any node
	//value of the BST and the given integer.
    int minDiff(Node *root, int K)
    {
        if(root==NULL)
            return INT_MAX;
        
        int currV=root->data;
        
        if(currV==K)
            return 0;
            
        return min(minDiff(root->left, K), min(minDiff(root->right, K), abs(currV-K)));
    }
};

leetcode;-

class Solution {
    public boolean checkStraightLine(int[][] coordinates) {
        double in_slope=((coordinates[1][1]-coordinates[0][1])*1.0)/(coordinates[1][0]-coordinates[0][0]);
        for(int i=0;i<coordinates.length;i++){
            for(int j=i+1;j<coordinates.length;j++){
                double slope = ((coordinates[j][1]-coordinates[i][1])*1.0)/(coordinates[j][0]-coordinates[i][0]);
                if(slope!=in_slope && slope!=-in_slope) return false;
            }
        }
        return true;
    }
}
